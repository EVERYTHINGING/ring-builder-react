{"version":3,"sources":["components/Verge3D.js","components/Options.jsx","components/Viewport.jsx","App.js","serviceWorker.js","index.js"],"names":["app","initVerge3D","params","window","v3d","AppUtils","getPageParams","sceneURL","logic","replace","load","Cache","enabled","initOptions","ctxSettings","useBkgTransp","alpha","preserveDrawBuf","preserveDrawingBuffer","preloader","useCustomPreloader","updateCb","finishCb","CustomPreloader","Preloader","call","this","prototype","Object","assign","create","onUpdate","percentage","onFinish","createCustomPreloader","preloaderProgressCb","preloaderEndCb","SimplePreloader","container","App","clearBkgOnLoad","renderer","setClearColor","preloaderStartCb","useFullscreen","document","getElementById","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","fullscreen_button","style","display","changeFullscreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","className","addEventListener","event","elem","stopPropagation","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","body","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","initFullScreen","fsButton","useCompAssets","enableControls","run","PE","updateAppInstance","PL","init","console","log","loadScene","Options","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","state","band","metal","polish","bandWidth","diamondSize","selectedOption","handleInputChange","bind","assertThisInitialized","handleOptionButtonClick","value","target","type","checked","change","defineProperty","name","setState","onChange","getAttribute","react_default","a","createElement","id","onClick","data-select","min","max","step","Component","Viewport","GLTFLoader","gltf","scene","add","obj","src_components_Options","handleOptionsChange","src_components_Viewport","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e6943cea.chunk.js","sourcesContent":["var app = null;\n\nexport const initVerge3D = () => {\n  var params = window.v3d.AppUtils.getPageParams();\n\n  var PUZZLES_DIR = '../../puzzles/';\n  var logicURL = params.logic ? params.logic : '__LOGIC__'.replace('__LOGIC__', '');\n  var sceneURL = params.load ? params.load : './scenes/main.gltf'.replace('__URL__', '');\n  if (!sceneURL) {\n  console.log('No scene URL specified');\n  return;\n  }\n\n  // some puzzles can benefit from cache\n  window.v3d.Cache.enabled = true;\n\n  loadScene(sceneURL, { useFullscreen: true });\n}\n\nfunction loadScene(sceneURL, initOptions) {\n\n    initOptions = initOptions || {};\n\n    var ctxSettings = {};\n    if (initOptions.useBkgTransp) ctxSettings.alpha = true;\n    if (initOptions.preserveDrawBuf) ctxSettings.preserveDrawingBuffer = true;\n\n    var preloader = initOptions.useCustomPreloader \n            ? createCustomPreloader(initOptions.preloaderProgressCb, \n            initOptions.preloaderEndCb) \n            : new window.v3d.SimplePreloader({ container: 'verge3d-container' });\n    \n    app = new window.v3d.App('verge3d-container', ctxSettings, preloader);\n    if (initOptions.useBkgTransp) {\n        app.clearBkgOnLoad = true;\n        app.renderer.setClearColor(0x000000, 0);\n    }\n    \n    if (initOptions.preloaderStartCb) initOptions.preloaderStartCb();\n    if (initOptions.useFullscreen) {\n        initFullScreen();\n    } else {\n        var fsButton = document.getElementById('fullscreen_button');\n        if (fsButton) fsButton.style.display = 'none';\n    }\n\n    sceneURL = initOptions.useCompAssets ? sceneURL + '.xz' : sceneURL;\n    app.load(sceneURL, function() {\n        app.enableControls();\n        app.run();\n\n        if (window.v3d.PE) window.v3d.PE.updateAppInstance(app);\n        if (window.v3d.PL) window.v3d.PL.init(app, initOptions);\n\n        runCode(app);\n    }, function() {\n        console.log('Can\\'t load the scene ' + sceneURL);\n    }, false);\n\n    return app;\n}\n\nfunction createCustomPreloader(updateCb, finishCb) {\n    function CustomPreloader() { \n        window.v3d.Preloader.call(this); \n    }\n\n    CustomPreloader.prototype = Object.assign(Object.create(window.v3d.Preloader.prototype), {\n        onUpdate: function(percentage) { \n            window.v3d.Preloader.prototype.onUpdate.call(this, percentage);\n            if (updateCb) updateCb(percentage);\n        },\n        onFinish: function() {\n            window.v3d.Preloader.prototype.onFinish.call(this);\n            if (finishCb) finishCb();\n        }\n    });\n        \n    return new CustomPreloader();\n}\n\nfunction initFullScreen() {\n\n    var fsButton = document.getElementById('fullscreen_button');\n    if (!fsButton) return;\n\n    if (document.fullscreenEnabled || \n            document.webkitFullscreenEnabled ||\n            document.mozFullScreenEnabled ||\n            document.msFullscreenEnabled)\n        window.fullscreen_button.style.display = 'inline';\n\n    window.fullscreen_button.addEventListener('click', function(event) {\n        event.stopPropagation();\n        if (document.fullscreenElement || \n                document.webkitFullscreenElement ||\n                document.mozFullScreenElement ||\n                document.msFullscreenElement) {\n            exitFullscreen();\n        } else\n            requestFullscreen(document.body);\n    });\n\n    function changeFullscreen() {\n        if (document.fullscreenElement || \n                document.webkitFullscreenElement ||\n                document.mozFullScreenElement ||\n                document.msFullscreenElement)\n            window.fullscreen_button.className = 'fullscreen-close';\n        else\n            window.fullscreen_button.className = 'fullscreen-open';\n    }\n\n    document.addEventListener('webkitfullscreenchange', changeFullscreen);\n    document.addEventListener('mozfullscreenchange', changeFullscreen);\n    document.addEventListener('msfullscreenchange', changeFullscreen);\n    document.addEventListener('fullscreenchange', changeFullscreen);\n\n    function requestFullscreen(elem) {\n        if (elem.requestFullscreen)\n            elem.requestFullscreen();\n        else if (elem.mozRequestFullScreen)\n            elem.mozRequestFullScreen();\n        else if (elem.webkitRequestFullscreen) \n            elem.webkitRequestFullscreen();\n        else if (elem.msRequestFullscreen)\n            elem.msRequestFullscreen();\n    }\n    \n    function exitFullscreen() {\n        if (document.exitFullscreen)\n            document.exitFullscreen();\n        else if (document.mozCancelFullScreen)\n            document.mozCancelFullScreen();\n        else if (document.webkitExitFullscreen)\n            document.webkitExitFullscreen();\n        else if (document.msExitFullscreen)\n            document.msExitFullscreen();\n    }\n}\n\nfunction prepareExternalInterface(app) {\n    // register functions in the app.ExternalInterface to call them from Puzzles, e.g:\n    // app.ExternalInterface.myJSFunction = function() {\n    //     console.log('Hello, World!');\n    // }\n\n}\n\nfunction runCode(app) {\n    // add your code here, e.g. console.log('Hello, World!');\n}\n\nexport const loadRing = () => {\n  var loader = new window.v3d.GLTFLoader();\n \n      // Load a glTF resource\n  loader.load('./scenes/ring1.gltf', function ( gltf ) {\n      //Here I had to add v3dapp. before scene, otherwise scene was undefined\n      app.scene.add( gltf.scene );\n  } );\n}\n","import React, { Component } from 'react';\nimport './Options.css';\n\nclass Options extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tband: 'round',\n\t\t\tmetal: 'gold',\n\t\t\tpolish: 'glossy',\n\t\t\tbandWidth: 1,\n\t\t\tdiamondSize: 1,\n\t\t\tselectedOption: 'band'\n\t\t};\n\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\n\t\tthis.handleOptionButtonClick = this.handleOptionButtonClick.bind(this);\n\t}\n\n\thandleInputChange(event) {\n\t\tconst value = event.target.type === 'checkbox' ? event.target.checked : event.target.value;\n\n\t\tlet change = { [event.target.name]: value };\n\t\tthis.setState(change, function(){\n\t\t\tthis.props.onChange(change);\n\t\t});\n\t}\n\n\thandleOptionButtonClick(event) {\n\t\tthis.setState({ selectedOption: event.target.getAttribute('data-select') });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"Options\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li><button onClick={this.handleOptionButtonClick} data-select=\"band\" className={ this.state.selectedOption === \"band\" ? 'open' : '' }>Band Style</button></li>\n\t\t\t\t\t<li><button onClick={this.handleOptionButtonClick} data-select=\"metal\" className={ this.state.selectedOption === \"metal\" ? 'open' : '' }>Metal</button></li>\n\t\t\t\t\t<li><button onClick={this.handleOptionButtonClick} data-select=\"polish\" className={ this.state.selectedOption === \"polish\" ? 'open' : '' }>Polish</button></li>\n\t\t\t\t\t<li><button onClick={this.handleOptionButtonClick} data-select=\"bandWidth\" className={ this.state.selectedOption === \"bandWidth\" ? 'open' : '' }>Band Width</button></li>\n\t\t\t\t\t<li><button onClick={this.handleOptionButtonClick} data-select=\"diamondSize\" className={ this.state.selectedOption === \"diamondSize\" ? 'open' : '' }>Diamond Size</button></li>\n\t\t\t\t</ul>\n\n\t\t\t\t<form onChange={this.handleInputChange}>\n\t\t\t\t\t<fieldset className={ this.state.selectedOption === \"band\" ? 'open' : '' }>\n\t\t\t\t\t\t<legend>Band Style</legend>\n\t\t\t\t\t\t<div className=\"option-select\">\n\t\t\t\t\t\t\t<label><input type=\"radio\" name=\"band\" value=\"round\" checked={this.state.band === \"round\"} /> Round</label>\n\t\t\t\t\t\t\t<label><input type=\"radio\" name=\"band\" value=\"pave\" checked={this.state.band === \"pave\"} /> Pave</label>\n\t\t\t\t\t\t\t<label><input type=\"radio\" name=\"band\" value=\"twisted\" checked={this.state.band === \"twisted\"} /> Twisted</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</fieldset>\n\n\t\t\t\t\t<fieldset className={ this.state.selectedOption === \"metal\" ? 'open' : '' }>\n\t\t\t\t\t\t<legend>Metal</legend>\n\t\t\t\t\t\t<div className=\"option-select\">\n\t\t\t\t\t\t\t<label><input type=\"radio\" name=\"metal\" value=\"gold\" checked={this.state.metal === \"gold\"} />Gold</label>\n\t\t\t\t\t\t\t<label><input type=\"radio\" name=\"metal\" value=\"silver\" checked={this.state.metal === \"silver\"} />Silver</label>\n\t\t\t\t\t\t\t<label><input type=\"radio\" name=\"metal\" value=\"chrome\" checked={this.state.metal === \"chrome\"} />Chrome</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</fieldset>\n\n\t\t\t\t\t\n\t\t\t\t\t<fieldset className={ this.state.selectedOption === \"polish\" ? 'open' : '' }>\n\t\t\t\t\t\t<legend>Polish</legend>\n\t\t\t\t\t\t<div className=\"option-select\">\n\t\t\t\t\t\t\t<label><input type=\"radio\" name=\"polish\" value=\"glossy\" checked={this.state.polish === \"glossy\"} />Glossy</label>\n\t\t\t\t\t\t\t<label><input type=\"radio\" name=\"polish\" value=\"matte\" checked={this.state.polish === \"matte\"} />Matte</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</fieldset>\n\n\t\t\t\t\t<fieldset className={ this.state.selectedOption === \"bandWidth\" ? 'open' : '' }>\n\t\t\t\t\t\t<legend>Band Width (cm)</legend>\n\t\t\t\t\t\t<div className=\"option-select\">\n\t\t\t\t\t\t\t<input type=\"range\" name=\"bandWidth\" min=\"0.5\" max=\"1.5\" step=\"0.5\" value={this.state.bandWidth} />\n\t\t\t\t\t\t\t<div className=\"slider-value\">{this.state.bandWidth}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</fieldset>\n\n\t\t\t\t\t<fieldset className={ this.state.selectedOption === \"diamondSize\" ? 'open' : '' }>\n\t\t\t\t\t\t<legend>Diamond Size (cm)</legend>\n\t\t\t\t\t\t<div className=\"option-select\">\n\t\t\t\t\t\t\t<input type=\"range\" name=\"diamondSize\" min=\"0.5\" max=\"1.5\" step=\"0.5\" value={this.state.diamondSize} />\n\t\t\t\t\t\t\t<div className=\"slider-value\">{this.state.diamondSize}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</fieldset>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Options;\n","import React, { Component } from \"react\";\nimport { initVerge3D, loadRing } from \"./Verge3D.js\";\nimport Options from \"./Options\";\nimport \"./Viewport.css\";\n\nclass Viewport extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    initVerge3D();\n    loadRing();\n  }\n\n  handleOptionsChange(obj){\n    console.log(obj);\n    //loadRing();\n  }\n\n  render() {\n    return (\n      <div className=\"Viewport\">\n        <div id=\"verge3d-container\" />\n        <Options onChange={this.handleOptionsChange} />\n      </div>\n    );\n  }\n}\n\nexport default Viewport;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Viewport from \"./components/Viewport.jsx\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Viewport />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}